2016-03-22 13:13:29,559 - [INFO] - from play in pool-4-thread-5 
Listening for HTTP on /0:0:0:0:0:0:0:0:9000

2016-03-22 13:13:33,323 - [INFO] - from play in play-internal-execution-context-1 
database [default] connected at jdbc:h2:mem:play

2016-03-22 13:13:33,362 - [ERROR] - from play in play-internal-execution-context-1 
Syntax error in SQL statement "                                              


ALTER TABLE SESSION ADD CONSTRAINT SESSION_SIGNAL FOREIGN KEY SESSION_SIGNAL[*] (SIGNAL_SIGNAL_CODE)
REFERENCES SIGNALS (SIGNAL_CODE) "; expected "("; SQL statement:
-- Reference:  session_signal (table: session)


ALTER TABLE session ADD CONSTRAINT session_signal FOREIGN KEY session_signal (signal_signal_code)
REFERENCES signals (signal_code) [42001-175] [ERROR:42001, SQLSTATE:42001]

2016-03-22 13:13:33,372 - [ERROR] - from application in New I/O worker #2 


! @6pfncfncb - Internal server error, for (GET) [/] ->

play.api.db.evolutions.InconsistentDatabase: Database 'default' is in an inconsistent state![An evolution has not been applied properly. Please check the problem and resolve it manually before marking it as resolved.]
	at play.api.db.evolutions.Evolutions$.checkEvolutionsState(Evolutions.scala:196) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:296) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin$$anonfun$onStart$1$$anonfun$apply$1.apply$mcV$sp(Evolutions.scala:495) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin.withLock(Evolutions.scala:531) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin$$anonfun$onStart$1.apply(Evolutions.scala:485) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin$$anonfun$onStart$1.apply(Evolutions.scala:483) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at scala.collection.immutable.List.foreach(List.scala:318) ~[scala-library.jar:na]
	at play.api.db.evolutions.EvolutionsPlugin.onStart(Evolutions.scala:483) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1$$anonfun$apply$mcV$sp$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1$$anonfun$apply$mcV$sp$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.collection.immutable.List.foreach(List.scala:318) ~[scala-library.jar:na]
	at play.api.Play$$anonfun$start$1.apply$mcV$sp(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$.start(Play.scala:90) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(ApplicationProvider.scala:157) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(ApplicationProvider.scala:130) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.Option.map(Option.scala:145) ~[scala-library.jar:na]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1.apply(ApplicationProvider.scala:130) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1.apply(ApplicationProvider.scala:128) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.util.Success.flatMap(Try.scala:200) ~[scala-library.jar:na]
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:128) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:120) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[scala-library.jar:na]
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1361) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) ~[scala-library.jar:na]

2016-03-22 13:13:33,372 - [ERROR] - from application in New I/O worker #1 


! @6pfncfncb - Internal server error, for (GET) [/] ->

play.api.db.evolutions.InconsistentDatabase: Database 'default' is in an inconsistent state![An evolution has not been applied properly. Please check the problem and resolve it manually before marking it as resolved.]
	at play.api.db.evolutions.Evolutions$.checkEvolutionsState(Evolutions.scala:196) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:296) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin$$anonfun$onStart$1$$anonfun$apply$1.apply$mcV$sp(Evolutions.scala:495) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin.withLock(Evolutions.scala:531) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin$$anonfun$onStart$1.apply(Evolutions.scala:485) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.db.evolutions.EvolutionsPlugin$$anonfun$onStart$1.apply(Evolutions.scala:483) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at scala.collection.immutable.List.foreach(List.scala:318) ~[scala-library.jar:na]
	at play.api.db.evolutions.EvolutionsPlugin.onStart(Evolutions.scala:483) ~[play-jdbc_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1$$anonfun$apply$mcV$sp$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1$$anonfun$apply$mcV$sp$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.collection.immutable.List.foreach(List.scala:318) ~[scala-library.jar:na]
	at play.api.Play$$anonfun$start$1.apply$mcV$sp(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$$anonfun$start$1.apply(Play.scala:91) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.api.Play$.start(Play.scala:90) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(ApplicationProvider.scala:157) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(ApplicationProvider.scala:130) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.Option.map(Option.scala:145) ~[scala-library.jar:na]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1.apply(ApplicationProvider.scala:130) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$1.apply(ApplicationProvider.scala:128) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.util.Success.flatMap(Try.scala:200) ~[scala-library.jar:na]
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:128) ~[play_2.10-2.3.6.jar:2.3.6]
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:120) ~[play_2.10-2.3.6.jar:2.3.6]
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[scala-library.jar:na]
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1361) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) ~[scala-library.jar:na]
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) ~[scala-library.jar:na]

